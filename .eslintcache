[{"C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\index.js":"1","C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\reportWebVitals.js":"2","C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\App.js":"3","C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\Todo\\Footer.js":"4","C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\Todo\\Header.js":"5","C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\Todo\\TodoList.js":"6","C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\Todo\\TodoItem.js":"7"},{"size":517,"mtime":1607540290227,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1607540290228,"results":"10","hashOfConfig":"9"},{"size":2265,"mtime":1607772848357,"results":"11","hashOfConfig":"9"},{"size":1116,"mtime":1607772848360,"results":"12","hashOfConfig":"9"},{"size":1145,"mtime":1607772848381,"results":"13","hashOfConfig":"9"},{"size":493,"mtime":1607540290227,"results":"14","hashOfConfig":"9"},{"size":1676,"mtime":1607772848387,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ctq8sb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\index.js",[],["33","34"],"C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\reportWebVitals.js",[],"C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\App.js",["35"],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport TodoList from \"./Todo/TodoList\";\r\nimport Header from \"./Todo/Header\";\r\nimport Footer from \"./Todo/Footer\";\r\nimport { func } from \"prop-types\";\r\n\r\n// при выполнении любого действия должно появляться уведомление с этим действием\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = React.useState([]);\r\n  const [todoFilter, setTodoFilter] = React.useState(\"all\");\r\n  let newTodos = [...todos];\r\n\r\n  if (todoFilter === \"all\") {\r\n    newTodos = todos;\r\n  } else if (todoFilter === \"active\") {\r\n    newTodos = todos.filter((todo) => !todo.done);\r\n  } else if (todoFilter === \"done\") {\r\n    newTodos = todos.filter((todo) => todo.done);\r\n  }\r\n    \r\n\r\n    \r\n\r\n  \r\n  \r\n  console.log(\"МАССИВ КОТОРЫЙ ДОЛЖЕН ОТРИСОВАТЬ\", newTodos);\r\n\r\n  const addTodo = (todo) => {\r\n    setTodos([todo, ...todos]);\r\n  };\r\n\r\n  let changeAllDone=()=>{setTodos(\r\n    newTodos = todos.map(todo=>{return{...todo,done:!todo.done}})\r\n    \r\n  )\r\n  console.log(newTodos)\r\n  }\r\n  \r\n  let changeFilterActive = () => {\r\n    setTodoFilter(\"active\");\r\n  };\r\n  let changeFilterAll = () => {\r\n    setTodoFilter(\"all\");\r\n  };\r\n  let changeFilterDone = () => {\r\n    setTodoFilter(\"done\");\r\n  };\r\n\r\n  function toggleTodo(id) {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.done = !todo.done;\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  }\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n  const deleteAllDoneTodo = () => {\r\n    setTodos(todos.filter((todo) => !todo.done));\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Header addElement={addTodo} doneAll={changeAllDone} all={changeFilterAll}/>\r\n      <TodoList\r\n        todos={newTodos}\r\n        onToggle={toggleTodo}\r\n        deleteTodo={deleteTodo}\r\n        todoFilter={todoFilter}\r\n      />\r\n\r\n      <Footer\r\n        deleteDoneTodo={deleteAllDoneTodo}\r\n        filterAll={changeFilterAll}\r\n        filterActive={changeFilterActive}\r\n        filterDone={changeFilterDone}\r\n      />\r\n      \r\n      <div>{todos.filter((todo) => !todo.done).length}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\Todo\\Footer.js",["36","37"],"import React from \"react\";\r\nimport \"./TodoItems.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n//после добавления элемента TodoItem в TodoList должна появиться кнопка \"clear complited\"\r\n// счетчик всегда показывает количество 'undone task'\r\n\r\ntoast.configure()\r\n\r\nfunction Footer({ filterAll, deleteDoneTodo, filterDone, filterActive }) {\r\n  \r\n  const deleteAllDone=()=>{\r\n    toast('All complete task deleted')\r\n  }\r\n  const all=()=>{\r\n    toast('View all task')\r\n  }\r\n  const active=()=>{\r\n    toast('View only activ task')\r\n  }\r\n  const done=()=>{\r\n    toast('View only completed task')\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <button onClick={() => filterAll()} onFocus={all}>all</button>\r\n      <button onClick={() => filterActive()} onFocus={active}>active</button>\r\n      <button onClick={() => filterDone()} onFocus={done}>done</button>\r\n      <button onClick={() => deleteDoneTodo()} onFocus={deleteAllDone}>delete all done </button>\r\n      <ToastContainer/>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\Todo\\Header.js",[],"C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\Todo\\TodoList.js",[],"C:\\Users\\CapricornuS\\Documents\\GitHub\\todo-react\\src\\Todo\\TodoItem.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":6,"column":10,"nodeType":"44","messageId":"45","endLine":6,"endColumn":14},{"ruleId":"42","severity":1,"message":"46","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":16},{"ruleId":"47","severity":2,"message":"48","line":11,"column":20,"nodeType":"44","messageId":"49","endLine":11,"endColumn":23},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'func' is defined but never used.","Identifier","unusedVar","'TodoList' is defined but never used.","no-undef","'all' is not defined.","undef","no-global-assign","no-unsafe-negation"]